#right_panel_content.rightPanelDefault
  .right_panel_content
    %h1= "#{t 'images.add_images_to'} '#{h @parent_node.content.title}'"

    #right_panel_form.clearfix= render partial: 'form'

    #bottom_container.clearfix
      #uploaded_container{ style: 'float: left; margin-right: 50px;' }
        %h2=t 'images.uploaded_images'
        %table#uploaded_images.uploaded_images_table
          %thead
            %th= t 'shared.title'
            %th= t 'images.thumbnail'
            - if current_user.has_role?('admin')
              %th= t 'images.for_header'
            %th= t 'images.cropped'

          %tbody
            - if @sibling_images.empty?
              %tr#no_images_row
                %td{ colspan: current_user.has_role?('admin') ? 4 : 3 }
                  %i= t 'images.no_images'
            - else
              - @sibling_images.each_with_index do |image, i|
                - unless !current_user.has_role?('admin') && image.is_for_header?
                  %tr{ id: "image_#{image.id}" }
                    %td= h image.title
                    %td= image_tag(thumbnail_admin_image_path(image, format: :jpg), alt: image.alt.to_s)
                    - if current_user.has_role?('admin')
                      %td= check_box_tag("image_is_for_header_#{image.id}", '1', image.is_for_header?, :onchange => "this.disable();" + remote_function(:url => admin_image_path(image, :format => :jpg), :method => :put, :complete => "$('image_is_for_header_#{image.id}').enable();", :with => "'image[is_for_header]='+$F('image_is_for_header_#{image.id}')") + "; return false;")

                    %td= render_cropper(image)

    .clearfix
      = button_to_function t('images.done_btn'), "Ext.ux.showRightPanelMssg('#{escape_javascript(t('images.done'))}')"
