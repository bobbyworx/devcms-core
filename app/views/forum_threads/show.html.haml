= bread_crumbs_for(@forum_thread.forum_topic.node, :include_root => false, :minimum_crumbs => 2)
.regularPage.forumThread
  %h1{:class => ('closed' if @forum_thread.closed? )}
  %span.prefix= t 'forums.forum_thread'
  = h @forum_thread.title
  %p.forumThreadDetails= "#{t 'forums.created_on'} #{l @forum_thread.created_at, :format => :long} #{t 'forums.by'} #{content_tag(:span, truncate(h(@forum_thread.user.screen_name), :length => 12), :class => 'userLogin')}, #{@forum_thread.number_of_replies} #{t((@forum_thread.number_of_replies == 1) ? 'forums.forum_post' : 'forums.forum_posts')}".html_safe
  .htmlField.forumThreadBody= w @forum_thread.start_post.body
  - if logged_in? && (@forum_thread.is_owned_by_user?(current_user) || current_user.has_role?('admin'))
    .clearfix.buttons
      = edit_button t('forums.edit_thread') do
        = link_to t('forums.edit_thread'), edit_forum_topic_forum_thread_path(@forum_topic, @forum_thread)
      - if current_user.has_role?('admin')
        .locking
          - if @forum_thread.closed?
            = image_tag('icons/unlock.png', :class => 'icon', :alt => t('forums.open_lock'), :title => t('forums.unlock_thread'))
            = link_to t('forums.unlock_thread'), open_forum_topic_forum_thread_path(@forum_topic, @forum_thread), :method => :put, :class => 'unlock'
          - else
            = image_tag('icons/lock.png', :class => 'icon', :alt => t('forums.closed_lock'), :title => t('forums.lock_thread'))
            = link_to t('forums.lock_thread'), close_forum_topic_forum_thread_path(@forum_topic, @forum_thread), :method => :put, :class => 'lock'
      = delete_button t('forums.delete_thread') do
        = link_to t('forums.delete_thread'), forum_topic_forum_thread_path(@forum_topic, @forum_thread), :method => :delete
  .forumPostsOverview.clearfix
    .clearfix
      %h2= t('forums.forum_posts').titleize
      - if logged_in? && !@forum_thread.closed?
        = right_new_button t('forums.new_post') do
          = link_to t('forums.new_post'), new_forum_topic_forum_thread_forum_post_path(@forum_topic, @forum_thread)
    - if @replies.empty?
      %p= t 'forums.no_posts_found'
    - else
      .forumPosts
        - @replies.each do |reply|
          %div{:class => "#{cycle('oddForumPost', 'evenForumPost')} clearfix", :id => "reply#{reply.id.to_s}"}
            %p.forumPostDetails
              %span.userLogin= truncate(h(reply.user_name), :length => 12)
              = "#{I18n.t('forums.at_time')} #{l(reply.created_at, :format => :long)}"
            .htmlField.forumPostBody= w reply.body
            - if logged_in? && (reply.is_owned_by_user?(current_user) || current_user.has_role?('admin'))
              .clearfix.buttons
                = delete_button t('forums.delete_post') do
                  = link_to t('forums.delete_post'), forum_topic_forum_thread_forum_post_path(@forum_topic, @forum_thread, reply), :method => :delete
                = edit_button t('forums.edit_post') do
                  = link_to t('forums.edit_post'), edit_forum_topic_forum_thread_forum_post_path(@forum_topic, @forum_thread, reply)
  - if logged_in?
    .clearfix
      - unless @replies.empty? || @forum_thread.closed?
        = right_new_button do
          = link_to t('forums.new_post'), new_forum_topic_forum_thread_forum_post_path(@forum_topic, @forum_thread)
  - else
    %p.signup= t 'forums.signup_required_to_post'