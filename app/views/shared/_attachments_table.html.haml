= javascript_tag("document.observe('dom:loaded', function() { $$('div.initialHidden').invoke('hide'); });");

%p.attachmentsTableExplanation= t 'attachments.attachments_table'

%table.attachmentsTable
  - attachments.group_by(&:category).tap do |grouped_attachments|
    - if grouped_attachments.keys.size == 1 && attachments.size <= 10
      %thead
        %tr
          %th{ :scope => "col" }= t 'shared.title'
          %th{ :scope => "col" }= t 'shared.type'
          %th{ :scope => "col" }= t 'shared.size'
          %th{ :scope => "col" }= t 'shared.download'
      %tbody
        - attachments.each do |attachment|
          %tr
            %td= h attachment.title
            %td== #{attachment_icon(attachment)}&nbsp;#{attachment.extension}
            %td== #{number_with_precision(attachment.size.to_f / 1024, :precision => 1)} KB
            %td= link_to_content_node t('shared.download'), attachment, {:format => attachment.extension}, :title => h(attachment.title)
    - elsif params[:layout] == "print"
      - grouped_attachments.sort.each do |cat, attachs|
        - if grouped_attachments.size == 1
          - catstring = unemptynize(cat, I18n.t('attachments.uploaded_attachments')).to_s
        - else
          - catstring = unemptynize(cat, I18n.t('attachments.uncategorized')).to_s
        %tr
          %th== #{catstring}
        %tr
          %td
            %table.attachmentsCategoryTable
              %thead
                %tr
                  %th{ :scope => "col", :class => "attWideColumn" }= t 'shared.title'
                  %th{ :scope => "col" }= t 'shared.type'
                  %th{ :scope => "col" }= t 'shared.size'
                  %th{ :scope => "col" }= t 'shared.download'
              %tbody
                - attachs.each do |attachment|
                  %tr
                    %td{ :class => "attWideColumn" }= h attachment.title
                    %td== #{attachment_icon(attachment)}&nbsp;#{attachment.extension}
                    %td== #{number_with_precision(attachment.size.to_f / 1024, :precision => 1)} KB
                    %td= link_to_content_node t('shared.download'), attachment, {}, :title => h(attachment.title)
    - else
      - grouped_attachments.sort.each do |cat, attachs|
        - if grouped_attachments.size == 1
          - catstring = unemptynize(cat, I18n.t('attachments.uploaded_attachments')).to_s
        - else
          - catstring = unemptynize(cat, I18n.t('attachments.uncategorized')).to_s
        %tr
          %th== #{link_toggable_section("app_#{catstring}", "link_#{catstring}")} #{catstring}
        %tr
          %td
            %div{ :id => "app_#{catstring}", :class => "initialHidden" }
              %table.attachmentsCategoryTable
                %thead
                  %tr
                    %th{ :scope => "col", :class => "attWideColumn" }= t 'shared.title'
                    %th{ :scope => "col" }= t 'shared.type'
                    %th{ :scope => "col" }= t 'shared.size'
                    %th{ :scope => "col" }= t 'shared.download'
                %tbody
                  - attachs.each do |attachment|
                    %tr
                      %td{ :class => "attWideColumn" }= h attachment.title
                      %td== #{attachment_icon(attachment)}&nbsp;#{attachment.extension}
                      %td== #{number_with_precision(attachment.size.to_f / 1024, :precision => 1)} KB
                      %td= link_to_content_node t('shared.download'), attachment, {:format => attachment.extension}, :title => h(attachment.title)
